{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","playerref","React","useRef","playerref2","className","split","minSize","playerRef","src","autoPlay","controls","playerRef2","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOA8CeA,MAvCf,WACE,IAEMC,EAAYC,IAAMC,SAClBC,EAAaF,IAAMC,SAMzB,OACE,sBAAKE,UAAU,MAAf,UACE,eAAC,IAAD,CAAWC,MAAM,aAAaC,QAAS,IAAvC,UAEE,qBAAKF,UAAU,UAAf,SACA,cAAC,IAAD,CAAgBG,UAAWP,EACzBQ,IAfK,yDAgBLJ,UAAU,eACVK,UAAU,EACVC,UAAU,MAId,qBAAKN,UAAU,UAAf,SACE,cAAC,IAAD,CAAgBO,WAAYR,EAC1BK,IAvBK,yDAwBLJ,UAAU,eACVK,UAAU,EACVC,UAAU,SAjBhB,QCNWE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.954b1d21.chunk.js","sourcesContent":["import React from 'react';\nimport ReactHlsPlayer from 'react-hls-player';\nimport SplitPane from 'react-split-pane';\nimport './App.css';\n\n\n\nfunction App() {\n  const url1 = \"https://rtvelivestream.akamaized.net/tdp_main_dvr.m3u8\";\n  const url2 = \"https://rtvelivestream.akamaized.net/24h_main_dvr.m3u8\";\n  const playerref = React.useRef();\n  const playerref2 = React.useRef();\n\n\n  \n\n  \n  return (\n    <div className=\"App\">\n      <SplitPane split=\"horizontal\" minSize={150}>\n        \n        <div className='wrapper'>\n        <ReactHlsPlayer playerRef={playerref}\n          src={url1}\n          className='react-player'\n          autoPlay={true}\n          controls={true}       \n         \n        />\n      </div>\n      <div className='wrapper'>\n        <ReactHlsPlayer playerRef2={playerref2}\n          src={url2}\n          className='react-player'\n          autoPlay={true}\n          controls={true}\n          \n        />\n      </div>\n  \n</SplitPane>;\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}